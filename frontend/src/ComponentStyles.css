.component-container {
    display: flex; /* Usa flexbox para organizar los elementos hijos en una columna. */
    flex-direction: column; /* Coloca los elementos hijos en una columna vertical. */
    align-items: center; /* Centra los elementos hijos horizontalmente dentro del contenedor. */
    margin: 20px; /* Añade un margen alrededor del contenedor para espaciarlo de otros elementos. */
    position: relative; /* Posiciona el contenedor de manera relativa, permitiendo posicionamientos absolutos dentro de él. */
}
  
.square {
    width: 300px; /* Define el ancho del contenedor cuadrado. */
    height: 150px; /* Define la altura del contenedor cuadrado. */
    border: 2px solid #000; /* Añade un borde negro de 2 píxeles alrededor del cuadrado. */
    display: flex; /* Usa flexbox para centrar los elementos hijos. */
    align-items: center; /* Centra los elementos hijos verticalmente dentro del cuadrado. */
    justify-content: center; /* Centra los elementos hijos horizontalmente dentro del cuadrado. */
    position: relative; /* Posiciona el cuadrado como relativo, lo que permite posicionar elementos hijos de forma absoluta. */
}
  
h3 {
    margin-bottom: 10px; /* Añade un margen inferior para separar el título del contenido siguiente. */
    font-size: 18px; /* Define el tamaño de fuente para los encabezados h3. */
}
  
.small-squares-container {
    display: flex; /* Usa flexbox para organizar los elementos hijos en una fila. */
    flex-direction: row; /* Coloca los elementos hijos en una fila horizontal. */
    justify-content: space-around; /* Distribuye los elementos hijos con espacio uniforme alrededor. */
    width: 100%; /* Hace que el contenedor ocupe todo el ancho disponible. */
    height: 100%; /* Hace que el contenedor ocupe toda la altura disponible. */
    align-items: center; /* Centra los elementos hijos verticalmente dentro del contenedor. */
}
  
.small-square {
    width: 85px; /* Define el ancho de los pequeños cuadrados. */
    height: 40px; /* Define la altura de los pequeños cuadrados. */
    border: 2px solid #000; /* Añade un borde negro de 2 píxeles alrededor de cada pequeño cuadrado. */
    display: flex; /* Usa flexbox para centrar el contenido dentro del cuadrado. */
    align-items: center; /* Centra el contenido verticalmente dentro del cuadrado. */
    justify-content: center; /* Centra el contenido horizontalmente dentro del cuadrado. */
    font-size: 16px; /* Define el tamaño de fuente dentro de los pequeños cuadrados. */
    margin: 5px; /* Añade un margen alrededor de cada pequeño cuadrado. */
}
  
.memory-square {
    width: 500px; /* Define el ancho total del bloque de memoria. */
    height: 185px; /* Define la altura total del bloque de memoria. */
    border: 2px solid #000; /* Añade un borde negro de 2 píxeles alrededor del bloque de memoria. */
    display: flex; /* Usa flexbox para organizar los elementos dentro del bloque de memoria. */
    justify-content: space-around; /* Distribuye los elementos hijos con espacio uniforme dentro del bloque. */
    align-items: center; /* Centra los elementos hijos verticalmente dentro del bloque. */
    position: relative; /* Posiciona el bloque como relativo para el posicionamiento interno. */
    padding: 10px; /* Añade un padding interno para evitar que los elementos toquen los bordes. */
}
  
.memory-left, .memory-right {
    display: flex; /* Usa flexbox para organizar los elementos dentro de estos bloques. */
    flex-direction: column; /* Coloca los elementos en una columna vertical. */
    align-items: center; /* Centra los elementos horizontalmente dentro de los bloques. */
    width: 50px; /* Define el ancho de los bloques laterales. */
}
  
.memory-left p, .memory-right p {
    font-size: 12px; /* Define el tamaño de fuente para los títulos dentro de los bloques laterales. */
    margin: 0; /* Elimina el margen para compactar los elementos. */
}
  
.memory-table {
    width: 60%; /* Ajusta la tabla para ocupar un 60% del ancho dentro del bloque de memoria. */
    height: auto; /* Permite que la altura de la tabla se ajuste automáticamente al contenido. */
    border-collapse: collapse; /* Elimina los espacios entre las celdas de la tabla. */
}
  
.memory-table td {
    border: 1px solid black; /* Añade un borde negro de 1 píxel alrededor de cada celda de la tabla. */
    text-align: center; /* Centra el texto dentro de las celdas. */
    width: 50%; /* Cada celda ocupa el 50% del ancho de la tabla. */
    height: 15px; /* Define la altura de las celdas de la tabla. */
    font-size: 10px; /* Define el tamaño de fuente dentro de las celdas de la tabla. */
    padding: 2px; /* Añade un padding de 2 píxeles dentro de cada celda para espacio interno. */
}
  
.error {
    color: red; /* Define el color del texto de error en rojo. */
    font-weight: bold; /* Muestra el texto de error en negrita. */
    margin-top: 10px; /* Añade un margen superior para separar el texto de error del contenido anterior. */
}
