{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\Proyectos-programacion\\\\Lab1_von_neumann\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ControlPanel from './components/ControlPanel';\nimport MemoryView from './components/MemoryView';\nimport CPUView from './components/CPUView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [program, setProgram] = useState([]);\n  const [cpuState, setCpuState] = useState({});\n  const [memoryState, setMemoryState] = useState([]);\n  const loadProgram = program => {\n    fetch('/api/load-program', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        program\n      })\n    }).then(response => response.json()).then(data => setMemoryState(data.memory));\n  };\n  const executeStep = () => {\n    fetch('/api/execute-step', {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      setCpuState(data.cpu);\n      setMemoryState(data.memory);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Von Neumann Architecture Simulator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      loadProgram: loadProgram,\n      executeStep: executeStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MemoryView, {\n      memoryState: memoryState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CPUView, {\n      cpuState: cpuState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3lt+nFPUrtRmezhPvTC80nuT/rg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ControlPanel","MemoryView","CPUView","jsxDEV","_jsxDEV","App","_s","program","setProgram","cpuState","setCpuState","memoryState","setMemoryState","loadProgram","fetch","method","headers","body","JSON","stringify","then","response","json","data","memory","executeStep","cpu","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Documents/Proyectos-programacion/Lab1_von_neumann/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ControlPanel from './components/ControlPanel';\nimport MemoryView from './components/MemoryView';\nimport CPUView from './components/CPUView';\n\nfunction App() {\n  const [program, setProgram] = useState([]);\n  const [cpuState, setCpuState] = useState({});\n  const [memoryState, setMemoryState] = useState([]);\n\n  const loadProgram = (program) => {\n    fetch('/api/load-program', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ program }),\n    })\n    .then(response => response.json())\n    .then(data => setMemoryState(data.memory));\n  };\n  \n  const executeStep = () => {\n    fetch('/api/execute-step', {\n      method: 'POST',\n    })\n    .then(response => response.json())\n    .then(data => {\n      setCpuState(data.cpu);\n      setMemoryState(data.memory);\n    });\n  };  \n\n  return (\n    <div className=\"App\">\n      <h1>Von Neumann Architecture Simulator</h1>\n      <ControlPanel loadProgram={loadProgram} executeStep={executeStep} />\n      <MemoryView memoryState={memoryState} />\n      <CPUView cpuState={cpuState} />\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,WAAW,GAAIN,OAAO,IAAK;IAC/BO,KAAK,CAAC,mBAAmB,EAAE;MACzBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ;MAAQ,CAAC;IAClC,CAAC,CAAC,CACDa,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIX,cAAc,CAACW,IAAI,CAACC,MAAM,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBX,KAAK,CAAC,mBAAmB,EAAE;MACzBC,MAAM,EAAE;IACV,CAAC,CAAC,CACDK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZb,WAAW,CAACa,IAAI,CAACG,GAAG,CAAC;MACrBd,cAAc,CAACW,IAAI,CAACC,MAAM,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxB,OAAA;MAAAwB,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3C5B,OAAA,CAACJ,YAAY;MAACa,WAAW,EAAEA,WAAY;MAACY,WAAW,EAAEA;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpE5B,OAAA,CAACH,UAAU;MAACU,WAAW,EAAEA;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxC5B,OAAA,CAACF,OAAO;MAACO,QAAQ,EAAEA;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;AAAC1B,EAAA,CAlCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}